@* ﻿<MudDialog>
    <DialogContent>
        <EditForm Model="@Journal" OnValidSubmit="@OnValidSubmit">
            <DataAnnotationsValidator />
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField @bind-Value="Journal.JournalDescription" Label="Description" Class="mt-4" Lines="3" Variant="Variant.Outlined" For="(() => Journal.JournalDescription)" Margin="Margin.Dense"></MudTextField>
                </MudItem>
            </MudGrid>
            <MudGrid>
                <MudItem xs="6">
                    <MudTextField @bind-Value="Journal.DocumentNo" Label="Document Number" Variant="Variant.Outlined" Margin="Margin.Dense" For="(() => Journal.DocumentNo)"></MudTextField>
                </MudItem>
                <MudItem xs="6">
                    <MudDatePicker Color="Color.Secondary" Rounded="true" PickerVariant="PickerVariant.Dialog" AutoClose="true" Label="Document Date" @bind-Date="journalDate" DateFormat="dd.MM.yyyy" Editable="true" Placeholder="Select Date" />
                </MudItem>
            </MudGrid>
            <MudGrid>
                <MudItem xs="6">
                    <MudCheckBox @bind-Value=Journal.IsDelete Color="Color.Primary">Delete</MudCheckBox>
                </MudItem>
                <MudItem xs="6" Class="">
                    <MudSelect Variant="Variant.Outlined" @bind-Value="Journal.DocumentTypeId" Label="Document Type" Margin="Margin.Dense">
                        @foreach (var type in DocumentTypes)
                        {
                            <MudSelectItem T="DocumentType" value="@type.DocumentTypeId">@type.DocumentName</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
            </MudGrid>
            <MudGrid>
                <MudItem xs="6" Class="">
                    <MudSelect Variant="Variant.Outlined" @bind-Value="Journal.TemplateId" Label="Template" Margin="Margin.Dense">
                        @foreach (var type in Templates)
                        {
                            <MudSelectItem T="Template" value="@type.TemplateId">@type.TemplateName</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="6" Class="">
                    <MudSelect Variant="Variant.Outlined" @bind-Value="Journal.JournalDetail.AccountId" Label="Account" Margin="Margin.Dense">
                        @foreach (var type in Accounts)
                        {
                            <MudSelectItem T="Account" value="@type.AccountId">@type.AccountName</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
            </MudGrid>
            <MudGrid>
                <MudItem xs="6" Class="">
                    <MudTextField @bind-Value="Journal.JournalDetail.ExchangeRate" Label="Exchange Rate" Variant="Variant.Outlined" Margin="Margin.Dense" For="(() => Journal.JournalDetail.ExchangeRate)"></MudTextField>
                </MudItem>
                <MudItem xs="6" Class="">
                    <MudTextField @bind-Value="Journal.JournalDetail.CurrencyAmount" Label="Currency Amount" Variant="Variant.Outlined" Margin="Margin.Dense" For="(() => Journal.JournalDetail.CurrencyAmount)"></MudTextField>
                </MudItem>
            </MudGrid>
            <MudGrid>
                <MudItem xs="6" Class="">
                    <MudSelect Variant="Variant.Outlined" @bind-Value="Journal.JournalDetail.Currency" Label="Account" Margin="Margin.Dense">
                        @foreach (var type in Currencies)
                        {
                            <MudSelectItem T="Currency" value="@type.CurrencyId">@type.CurrencyCode</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem>
                        <MudCheckBox @bind-Value=Journal.JournalDetail.IsDebit Color="Color.Primary">Debit</MudCheckBox>
                </MudItem>
            </MudGrid>
            <MudItem Class="mt-4 d-flex justify-end">
                <MudButton Class="form-cancel-btn" OnClick="Cancel">Cancel</MudButton>
                <MudButton Class="form-submit-btn" Color="Color.Primary" ButtonType="ButtonType.Submit">Save</MudButton>
            </MudItem>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public Journal Journal { get; set; } = new();

    List<DocumentType> DocumentTypes = new();
    List<Template> Templates = new();
    List<Account> Accounts = new();
    List<Currency> Currencies = new();
    public DateTime? journalDate = DateTime.UtcNow;

    protected override async Task OnInitializedAsync()
    {
        Journal.DocumentType = Journal.DocumentType ?? new();
        Journal.JournalDetail = Journal.JournalDetail ?? new();
        Journal.Template = Journal.Template ?? new ();
        Journal.JournalDetail.Account = Journal.JournalDetail.Account ?? new();
        Journal.JournalDetail.Currency = Journal.JournalDetail.Currency ?? new();
        Random random = new Random();
        Journal.UserId = Journal.UserId == 0 ? random.Next(0,100000) : Journal.UserId;
    }


    private void OnValidSubmit(EditContext context)
    {
        Journal.DocumentDate = journalDate ?? DateTime.UtcNow;
        bool isValid = context.Validate();
        if (isValid)
        {
            MudDialog.Close(DialogResult.Ok(Journal));
        }
    }
    private void Cancel() => MudDialog.Cancel();
} *@