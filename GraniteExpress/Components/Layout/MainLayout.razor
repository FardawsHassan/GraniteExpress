@inherits LayoutComponentBase
@inject NavigationManager _navigationManager
<MudThemeProvider IsDarkMode=true Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <MudSpacer />
        <MudIconButton Style="color:white" Icon="@Icons.Material.Filled.Logout" OnClick="Logout" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="px-10 py-7">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme _theme = new();
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                var state = await _authStateProvider.GetAuthenticationStateAsync();
                var user = state.User;
                if (user is not null && user.Identity.IsAuthenticated)
                {
                    var userId = user.GetUserId();
                    var userName = user.GetUserName();
                    _currentUser.SetState(userId, userName);
                }
            }
            catch
            {

            }
        }
    }

    private async Task Logout()
    {
        await ((AuthStateProvider)_authStateProvider).ClearStateAsync();
        _navigationManager.NavigateTo("login");
    }
}