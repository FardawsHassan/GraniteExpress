@* @implements IDisposable *@

@inject NavigationManager NavigationManager


<MudText Class="py-5 pl-5 mb-1">GraniteExpress</MudText>
<MudNavMenu Bordered Rounded Color="Color.Primary">
    <AuthorizeView Policy="ReferenceMenu" Context="ReferenceMenu">
        <MudNavGroup Icon="@Icons.Material.Filled.Storage" Title="Reference" Expanded="true">
            <AuthorizeView Policy="ChatOfAccountMenu" Context="ChatOfAccountMenu">
                <MudNavLink Href="/account" Match="NavLinkMatch.Prefix">Chart of Accounts</MudNavLink>
            </AuthorizeView>
            <AuthorizeView Policy="ClientMenu" Context="ClientMenu">
                <MudNavLink Href="/client" Match="NavLinkMatch.Prefix">Clients</MudNavLink>
            </AuthorizeView>
            <AuthorizeView Policy="TemplateMenu" Context="TemplateMenu">
                <MudNavLink Href="/template" Match="NavLinkMatch.Prefix">Templates</MudNavLink>
            </AuthorizeView>
        </MudNavGroup>
    </AuthorizeView>
    <AuthorizeView Policy="JournalMenu" Context="JournalMenu">
        <MudNavGroup Title="Journal" Icon="@Icons.Material.Filled.CurrencyExchange" Expanded="true">
            <AuthorizeView Policy="TransactionMenu" Context="TransactionMenu">
                <MudNavLink Href="/transaction" Match="NavLinkMatch.Prefix">Transaction</MudNavLink>
            </AuthorizeView>
            <AuthorizeView Policy="ViewMenu" Context="ViewMenu">
                <MudNavLink Href="/view" Match="NavLinkMatch.Prefix">View</MudNavLink>
            </AuthorizeView>
        </MudNavGroup>
        <AuthorizeView Policy="ReportMenu" Context="ReportMenu">
            <MudNavGroup Icon="@Icons.Material.Filled.Dashboard" Title="Report" Expanded="true">
                <AuthorizeView Policy="ListOfTransactionMenu" Context="ListOfTransactionMenu">
                    <MudNavLink Href="/listoftransaction" Match="NavLinkMatch.Prefix">List of Transaction</MudNavLink>
                </AuthorizeView>
            </MudNavGroup>
        </AuthorizeView>
    </AuthorizeView>
    <AuthorizeView Policy="AdminMenu" Context="AdminMenu">
        <MudNavGroup Title="Admin" Icon="@Icons.Material.Filled.AdminPanelSettings" Expanded="true">
            <AuthorizeView Policy="UserMenu" Context="UserMenu">
                <MudNavLink Href="/users" Match="NavLinkMatch.Prefix">User</MudNavLink>
            </AuthorizeView>
            <AuthorizeView Policy="RoleMenu" Context="RoleMenu">
                <MudNavLink Href="/roles" Match="NavLinkMatch.Prefix">Role</MudNavLink>
            </AuthorizeView>
            <AuthorizeView Policy="ClaimMenu" Context="ClaimMenu">
                <MudNavLink Href="/claims" Match="NavLinkMatch.Prefix">Claims</MudNavLink>
            </AuthorizeView>
        </MudNavGroup>
    </AuthorizeView>
    <AuthorizeView Policy="SettingsMenu" Context="SettingsMenu">
        <MudNavGroup Title="Settings" Icon="@Icons.Material.Filled.AdminPanelSettings" Expanded="true">
            <AuthorizeView Policy="ChangePasswordMenu" Context="ChangePasswordMenu">
                <MudNavLink Href="/changePassword" Match="NavLinkMatch.Prefix">Change Password</MudNavLink>
            </AuthorizeView>
        </MudNavGroup>
    </AuthorizeView>
</MudNavMenu>








@* <div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">GraniteExpress</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="auth">
                <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div> *@

@code {
    // private string? currentUrl;

    // protected override void OnInitialized()
    // {
    //     currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
    //     NavigationManager.LocationChanged += OnLocationChanged;
    // }

    // private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    // {
    //     currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
    //     StateHasChanged();
    // }

    // public void Dispose()
    // {
    //     NavigationManager.LocationChanged -= OnLocationChanged;
    // }
}

